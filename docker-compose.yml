version: "3.8"

services:
  postgresql:
    image: ${POSTGRES_IMAGE}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "up-vibe-dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - up-vibe-network
    container_name: postgresql

  liquibase:
    image: ${LIQUIBASE_IMAGE}
    volumes:
      - ${LIQUIBASE_VOLUME_CONFIG}:/liquibase/config/
      - ${LIQUIBASE_VOLUME_CHANGESETS}:/liquibase/changesets/
      - ${LIQUIBASE_VOLUME_PROPERTIES}:/liquibase/liquibase.properties
    command: --defaultsFile=liquibase.properties update
    networks:
      - up-vibe-network
    container_name: liquibase
    depends_on:
      postgresql:
        condition: service_healthy

  rabbitmq:
    image: ${RABBITMQ_IMAGE}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    expose:
      - ${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - up-vibe-network
    container_name: rabbitmq

  server:
    build:
      context: ${SERVER_CONTEXT}
      dockerfile: ${SERVER_DOCKERFILE_DEV}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - ${SERVER_INSPECT_PORT}:${SERVER_INSPECT_PORT}
    expose:
      - ${SERVER_PORT}
      - ${SERVER_INSPECT_PORT}
    command: ${SERVER_COMMAND_RUN}
    container_name: server
    restart: always
    volumes:
      - ${SERVER_VOLUME_LOGS}:/usr/src/app/logs
      - ${SERVER_VOLUME_CONFIG}:/usr/src/app/config
      - ${SERVER_VOLUME_STORAGE}:/usr/src/app/storage
      - ${SERVER_VOLUME_PLUGINS}:/usr/src/app/plugins
      - ${SERVER_VOLUME_SRC}:/usr/src/app/src
    depends_on:
      postgresql:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started
    environment:
      - DEBUG= *
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/up-vibe/v1/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - up-vibe-network
    user: ${SERVER_USER}

networks:
  up-vibe-network:
    name: up-vibe-network
