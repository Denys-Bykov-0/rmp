name: up-vibe-server
services:
  postgresql:
    image: postgres:15.3
    ports:
      - 5432:5432
    expose:
      - 5432
    restart: on-failure
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: up-vibe-dev
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d up-vibe-dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /opt/upVibe/postgresql/data:/var/lib/postgresql/data
    networks:
      - up-vibe-network
    container_name: postgresql

  liquibase:
    image: liquibase/liquibase:4.23
    volumes:
      - ./scripts/db/config:/liquibase/config/
      - ./scripts/db/changesets:/liquibase/changesets/
      - ./scripts/db/liquibase.properties:/liquibase/liquibase.properties
    command: --defaultsFile=liquibase.properties update
    restart: "no"
    networks:
      - up-vibe-network
    container_name: liquibase
    depends_on:
      postgresql:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.12.2-management
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - up-vibe-network
    container_name: rabbitmq

  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    expose:
      - 3000
    command: -c "npm run start"
    container_name: server
    volumes:
      - ./server/config:/opt/upVibe/server/config
      - ./server/logs:/opt/upVibe/server/logs
      - ./server/plugins:/opt/upVibe/server/plugins
      - ./scripts/taggers:/opt/upVibe/scripts/taggers
      - ./docs/api:/opt/upVibe/server/api
      - /opt/upVibe/storage:/opt/upVibe/storage
    healthcheck:
      test: "curl --insecure --fail https://localhost:3000/up-vibe/v1/health || exit 1"
      interval: 120s
      timeout: 60s
      retries: 3
      start_period: 60s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      postgresql:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_started
    networks:
      - up-vibe-network
  file-coordinator:
    build:
      context: ./services/file-coordinator
      dockerfile: ./Dockerfile
    command: -c "npm run start"
    container_name: file-coordinator
    volumes:
      - ./services/file-coordinator/config:/opt/upVibe/services/file-coordinator/config
      - ./services/file-coordinator/logs:/opt/upVibe/file-coordinator/logs
    networks:
      - up-vibe-network

networks:
  up-vibe-network:
    name: up-vibe-network
