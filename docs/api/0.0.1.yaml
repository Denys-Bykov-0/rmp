openapi: '3.0.3'
info:
  title: upVibe-Server
  license:
    name: Express v.4.18.2
    url: https://github.com/expressjs/express/blob/master/LICENSE
  version: 0.0.1

tags:
  - name: api
    description: API management
  - name: sources
    description: Source management
  - name: files
    description: File management
  - name: tags
    description: Tag management
  - name: tag-mappings
    description: Tag mappings management
  - name: user-management
    description: User management

paths:
  /up-vibe/v1/health:
    get:
      tags:
        - api
      summary: Health check
      description: Health check
      operationId: healthCheck
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessage'
              example:
                  message: "API is healthly!"
  /up-vibe/v1/auth-test:
    get:
      tags:
        - api
      summary: Test authentication
      description: Test authentication
      operationId: authTest
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessage'
              example:
                  message: "Auth test passed!"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessage'
              example:
                  message: "Requires authentication"
      security:
        - BearerAuth: []
        - upvibe-auth:
            - user
  /up-vibe/v1/info:
    get:
      tags:
        - api
      summary: Get API info
      description: Get API info
      operationId: getApiInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: "1.0.0"
  /up-vibe/v1/sources:
    get:
      tags:
        - sources
      summary: Get sources
      description: Returns array of the available sources
      operationId: getSources
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
              example:
                - id: 1
                  description: "youtube"
                - id: 2
                  description: "itunes"
                - id: 3
                  description: "spotify"
      security:
        - BearerAuth: []
        - upvibe-auth:
            - user
  /up-vibe/v1/sources/{sourceId}:
    get:
      tags:
        - sources
      summary: Get source
      description: Return information about source
      operationId: getSource
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
              example:
                id: 1
                description: "youtube"
      security:
        - BearerAuth: []
        - upvibe-auth:
            - user
  /up-vibe/v1/sources/{sourceId}/logo:
    get:
      tags:
        - sources
      summary: Get logo for the given source id
      operationId: getSourceLogo
      parameters:
        - name: sourceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - BearerAuth: []
        - upvibe-auth:
            - user
  /up-vibe/v1/files:
    post:
      tags:
        - files
      summary: Create a new file
      description: Create a new file.
      operationId: addFile
      requestBody:
        description: Create a new file
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreationRequest'
            examples:
              youtube:
                value:
                  url: "https://www.youtube.com/watch?v=6JYIGclVQdw"
              itunes:
                value:
                  url: "https://music.apple.com/us/album/chaos-in-the-streets/1560000000?i=1560000001"
              spotify:
                value:
                  url: "https://open.spotify.com/track/6JYIGclVQdw"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                youtube:
                  value:
                    id: 1
                    source:
                      id: 1
                      description: "youtube"
                    status: "I"
                    sourceUrl: "https://youtu.be//6JYIGclVQdw"
                    tags:
                      title: "Chaos in the Streets"
                      artist: "Magnavolt"
                      album: "Chaos in the Streets"
                      year: 2021
                      trackNumber: 1
                      puctureId: 1
        '400':
          description: File already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessageError'
              example:
                message: "File already exists"
                code: -1
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessageError'
              example:
                message: "Invalid input"
                code: -1
      security:
        - BearerAuth: []
        - upvibe-auth:
            - user
    get:
      tags:
        - files
      summary: Get files
      description: Returns array of files for current user
      operationId: getFiles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
              examples:
                youtube:
                  value:
                    - id: 1
                      source:
                        id: 1
                        description: "youtube"
                      status: "I"
                      sourceUrl: "https://youtu.be//6JYIGclVQdw"
                      tags:
                        title: "Chaos in the Streets"
                        artist: "Magnavolt"
                        album: "Chaos in the Streets"
                        year: 2021
                        trackNumber: 1
                        puctureId: 1
                    - id: 2
                      source:
                        id: 2
                        description: "itunes"
                      status: "I"
                      sourceUrl: "https://music.apple.com/us/album/"
                      tags:
                        title: "Chaos in the Streets"
                        artist: "Magnavolt"
                        album: "Chaos in the Streets"
                        year: 2021
                        trackNumber: 1
                        puctureId: 1
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}:
    get:
      tags:
        - files
      summary: Get file
      description: Return information about file
      operationId: getTaggedFile
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}/download:
    get:
      tags:
        - files
      summary: Download tagged file
      description: Download tagged file
      operationId: tagAndLoadFile
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}/parse-tags:
    post:
      tags:
        - tags
      summary: Add a new tag for given fileId
      description: Add a new tag object and request system to parse it.
      operationId: addTag
      parameters:
        - name: fileId
          in: path
          description: id of the file for which the tag is being parsed
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
              example:
                - id: 1
                  source:
                    id: 1
                    description: "youtube"
                  status: "I"
                  sourceUrl: "https://youtu.be//6JYIGclVQdw"
                  tags:
                    title: "Chaos in the Streets"
                    artist: "Magnavolt"
                    album: "Chaos in the Streets"
                    year: 2021
                    trackNumber: 1
                    puctureId: 1
                - id: 2
                  source:
                    id: 2
                    description: "itunes"
                  status: "I"
                  sourceUrl: "https://music.apple.com/us/album/"
                  tags:
                    title: "Chaos in the Streets"
                    artist: "Magnavolt"
                    album: "Chaos in the Streets"
                    year: 2021
                    trackNumber: 1
                    puctureId: 1
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIMessageError'
              example:
                message: "Invalid input"
                code: -1
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}/tags:
    get:
      tags:
        - tags
      summary: Find tags for given fileId
      description: Returns array of tags for given fileId
      operationId: getTags
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
              example:
                - id: 1
                  source:
                    id: 1
                    description: "youtube"
                  status: "I"
                  sourceUrl: "https://youtu.be//6JYIGclVQdw"
                  tags:
                    title: "Chaos in the Streets"
                    artist: "Magnavolt"
                    album: "Chaos in the Streets"
                    year: 2021
                    trackNumber: 1
                    puctureId: 1
                - id: 2
                  source:
                    id: 2
                    description: "itunes"
                  status: "I"
                  sourceUrl: "https://music.apple.com/us/album/"
                  tags:
                    title: "Chaos in the Streets"
                    artist: "Magnavolt"
                    album: "Chaos in the Streets"
                    year: 2021
                    trackNumber: 1
                    puctureId: 1
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}/tags/{tagId}:
    get:
      tags:
        - tags
      summary: Get tag for given fileId
      description: Get tag for given fileId
      operationId: getTag
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
              example:
                id: 1
                source:
                  id: 1
                  description: "youtube"
                status: "I"
                sourceUrl: "https://youtu.be//6JYIGclVQdw"
                tags:
                  title: "Chaos in the Streets"
                  artist: "Magnavolt"
                  album: "Chaos in the Streets"
                  year: 2021
                  trackNumber: 1
                  puctureId: 1
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/tag-mapping-priority:
    get:
      tags:
        - tag-mappings
      summary: Get tag mapping priority
      description: Get tag mapping priority
      operationId: getTagMappingPriority
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagMappingPriority'
              example:
                title:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                artist:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                album:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                year:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                trackNumber:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                puctureId:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
    put:
      tags:
        - tag-mappings
      summary: Update tag mapping priority
      description: Update tag mapping priority
      operationId: updateTagMappingPriority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagMappingPriority'
              example:
                title:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                artist:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                album:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                year:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                trackNumber:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                puctureId:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
        required: true
      responses:
        '200':
          description: successful operation
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
  /up-vibe/v1/files/{fileId}/tag-mapping:
    get:
      tags:
        - tag-mappings
      summary: Get tag mapping for given file
      description: Get tag mapping for given file
      operationId: getTagMapping
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagMapping'
                example:
                  title:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
                  artist:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
                  album:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
                  year:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
                  trackNumber:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
                  puctureId:
                    - id: 1
                      description: "youtube"
                    - id: 2
                      description: "itunes"
                    - id: 3
                      description: "spotify"
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []
    put:
      tags:
        - tag-mappings
      summary: Update tag mapping for given file id
      description: Update tag mapping for given file id
      operationId: updateTagMapping
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagMapping'
              example:
                title:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                artist:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                album:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                year:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                trackNumber:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
                puctureId:
                  - id: 1
                    description: "youtube"
                  - id: 2
                    description: "itunes"
                  - id: 3
                    description: "spotify"
        required: true
      responses:
        '200':
          description: successful operation
      security:
        - upvibe-auth:
            - user
        - BearerAuth: []

components:
  schemas:
    APIMessage:
      type: object
      properties:
        message:
          type: string
    APIMessageError:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
    FileCreationRequest:
      type: object
      properties:
        url:
          type: string
    Source:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description::
          type: string
        logo:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        source:
          $ref: '#/components/schemas/Source'
        status:
          type: string
        sourceUrl:
          description: May contain source location
          type: string
        tags:
          $ref: '#/components/schemas/ShortTag'
    ShortTag:
      type: object
      properties:
        title:
          type: string
        artist:
          type: string
        album:
          type: string
        year:
          type: integer
        trackNumber:
          type: integer
        puctureId:
          type: integer
    File:
      type: object
      properties:
        id:
          type: integer
          format: int64
        source:
          $ref: '#/components/schemas/Source'
        status:
          type: string
        sourceUrl:
          description: May contain source location
          type: string
        tags:
          $ref: '#/components/schemas/ShortTag'
    TagMappingPriority:
      type: object
      properties:
        title:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        artist:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        album:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        year:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        trackNumber:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        puctureId:
          type: array
          items:
            $ref: '#/components/schemas/Source'
    TagMapping:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/TagMappingPriority'
        artist:
          $ref: '#/components/schemas/TagMappingPriority'
        album:
          $ref: '#/components/schemas/TagMappingPriority'
        year:
          $ref: '#/components/schemas/TagMappingPriority'
        trackNumber:
          $ref: '#/components/schemas/TagMappingPriority'
        puctureId:
          $ref: '#/components/schemas/TagMappingPriority'
  securitySchemes:
    upvibe-auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://up-vibe.eu.auth0.com/authorize
          tokenUrl: https://up-vibe.eu.auth0.com/oauth/token
          scopes:
            user: user
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []
  - upvibe-auth:
      - user
